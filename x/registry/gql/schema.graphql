#
# Copyright 2019 Wireline, Inc.
#

# Record is a base object which is used as a mixin for other types within the Registry.
type Record {
  id: String!                 # wrn:record:xxxxxxx.
  type: String!               # wrn:registry-type:xxxxxxx.
  owner: String!              # Address of record owner.
  attributes: String          # User defined attributes.
}

# Mutations require payment in coins (e.g. 100wire).
# Used by the wallet to get the account balance for display and mutations.
type Coin {
  type: String!               # e.g. 'WIRE'
  amount: Int!                # e.g. 100
}

# Represents an account on the blockchain.
# Mutations have to be signed by a particular account.
type Account {
  address: String!            # Blockchain address.
  pubKey: String              # Public key.
  number: Int!                # Account number.
  sequence: Int!              # Sequence number used to prevent replays.
  balance: [Coin!]            # Current balance for each coin type.
}

# Bots are autonomous agents that interact with users (and other bots).
type Bot {
  record: Record
  name: String!
  accessKey: String
}

type Query {

  #
  # Wallet API.
  #

  # Get blockchain accounts.
  getAccounts(
    addresses: [String!]
  ): [Account]

  #
  # Low layer API, works with bare records.
  #

  # Get records by IDs.
  getRecordsByIds(
    ids: [String!]
  ): [Record]

  # Get records by attributes.
  getRecordsByAttributes(
    namespace: String
  ): [Record]

  #
  # High layer API, works with types.
  #

  # Get bots.
  getBots(
    namespace: String
    name: [String!]
  ): [Bot]
}

type Mutation {

  # Submit a transaction to the blockchain.
  # `tx` is a blob created by https://github.com/wirelineio/registry-client.
  submit(tx: String!): String
}
